// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheGarage.Data;

#nullable disable

namespace TheGarage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230305225540_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheGarage.Models.CarModel", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<bool?>("IsElectric")
                        .HasColumnType("bit");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            IsElectric = false,
                            Mark = "Lamborghini",
                            Model = "Urus Performante",
                            NumberOfSeats = 5
                        },
                        new
                        {
                            CarId = 2,
                            IsElectric = false,
                            Mark = "Volvo",
                            Model = "XC 40",
                            NumberOfSeats = 5
                        },
                        new
                        {
                            CarId = 3,
                            IsElectric = false,
                            Mark = "Audi",
                            Model = "S5",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            CarId = 4,
                            IsElectric = false,
                            Mark = "Entap",
                            Model = "Mada 9",
                            NumberOfSeats = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
